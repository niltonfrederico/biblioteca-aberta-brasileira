services:
  db-country:
    image: postgres:16-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    ports:
      - 5432:5432
    networks:
      - djangotemplate
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  app-country:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    env_file: .env
    volumes:
      - .:/app
    ports:
      - "8080:8080"
    depends_on:
      db-country:
        condition: service_healthy
    command: ["python", "manage.py", "runserver", "0.0.0.0:8080"]
    networks:
      - bab
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python manage.py health_check -s readiness && python manage.py health_check -s liveness",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2023-10-25T06-33-25Z.fips
    ports:
      - "9000:9000"
      - "9001:9001"
    command: minio server /bab-country-cdn --console-address 0.0.0.0:9001
    volumes:
      - bab-country-cdn:/bab-country-cdn
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 20s
      timeout: 10s
      retries: 3
    networks:
      - bab

  createbuckets:
    image: minio/mc
    env_file: .env
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - bab-country-cdn:/bab-country-cdn
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add bab-country-cdn http://minio:9000 minio-country-user minio-country-password;
      /usr/bin/mc rm -r --force bab-country-cdn/cdn.country.org;
      /usr/bin/mc mb bab-country-cdn/cdn.country.org;
      /usr/bin/mc policy -r set download bab-country-cdn/cdn.country.org;
      exit 0;
      "
    networks:
      - bab

volumes:
  bab-country-cdn:

networks:
  bab:
    driver: bridge